import netlists
import Chip_Functions

# This program initialises the grid.

# Read the grid from a file, then make a list of that size with 0's.
def make_base(string):
    grid = 0

    with open(string) as file:
        line = file.readline()
        grid_size = [int(s) for s in line.split() if s.isdigit()]

        if len(grid_size) == 3:
            grid = [[["" for _ in range(grid_size[0])]
                     for _ in range(grid_size[1])]
                    for _ in range(grid_size[2])]
        else:
            print("Incorrect grid size")

    file.close()
    return grid


# Read the coordinates of the gates from file, then put that gate in the grid.
def set_gates(string, grid):
    with open(string) as file:
        next(file)
        line = file.readline()

        while line:
            line = line.replace("(", "").replace(")", "").replace(",", "")
            gate = line.split(" ")
            grid[0][int(gate[2])][int(gate[1])] = "G" + (gate[0])

            line = file.readline()

    return grid


# print the chip.
def print_grid(grid):
    for i in range(len(grid)):
        grid_layer = grid[i]

        for j in range(len(grid_layer)):
            print(grid_layer[j])

        print("\n")

# initialize connections
def init_connections(netlist, grid):
    for i in range(len(netlist)):
        gate_1 = "G" + str(netlist[i][0])
        gate_2 = "G" + str(netlist[i][1])







base = make_base("print_2")
grid = set_gates("print_2", base)
print_grid(grid)
netlist = netlists.netlist_4
init_connections(netlist, grid)